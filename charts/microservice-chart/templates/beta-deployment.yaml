{{- if and .Values.canaryDelivery.create  .Values.canaryDelivery.deployment.create -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice-chart.fullnameCanaryDelivery" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "microservice-chart.labelsCanaryDelivery" . | nindent 4 }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      {{- include "microservice-chart.selectorLabelsCanaryDelivery" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- if .Values.canaryDelivery.deployment.forceRedeploy }}
        redeploy: {{ now | unixEpoch | quote }}
        {{- end }}
        aadpodidbinding: "{{ .Values.namespace }}-pod-identity"
        {{- include "microservice-chart.selectorLabelsCanaryDelivery" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      serviceAccountName: {{ include "microservice-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.canaryDelivery.deployment.image.repository }}:{{ .Values.canaryDelivery.deployment.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.canaryDelivery.deployment.image.pullPolicy }}
          ports:
          {{- range .Values.service.ports }}
            - name: app-port-{{ . }}
              containerPort: {{ . }}
              protocol: TCP
          {{- end }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.envSecret .Values.fileConfig .Values.fileShare.create .Values.fileConfigExternals.create }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            {{- if .Values.envSecret }}
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
            {{- end }}
            {{- if .Values.fileConfig }}
            {{- range $key, $val := .Values.fileConfig }}
            - name: file-config
              mountPath: "/mnt/file-config/{{ $key }}"
              subPath: {{ $key }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if .Values.fileConfigExternals.create }}
            {{- range $k, $v := .Values.fileConfigExternals.configMaps }}
            - name: file-config-external-{{ $v.name }}
              mountPath: "/mnt/file-config-external/{{ $v.name }}/{{ $v.key }}"
              subPath: {{ $v.key }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if .Values.fileShare.create }}
            {{- range $k, $v := .Values.fileShare.folders }}
            - name: file-azure-{{ $v.name }}
              csi:
                driver: file.csi.azure.com
                readOnly: {{ $v.readOnly }}
                volumeAttributes:
                  secretName: {{ include "microservice-chart.fullname" $ }}
                  shareName: {{ $v.name }}
                  mountOptions: {{ $v.mountOptions }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if or .Values.canaryDelivery.deployment.envSecret .Values.canaryDelivery.deployment.fileConfig .Values.canaryDelivery.deployment.fileShare.create .Values.canaryDelivery.deployment.fileConfigExternals.create }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            {{- if .Values.canaryDelivery.deployment.envSecret }}
            - name: beta-secrets-store-inline
              mountPath: "/mnt/beta-secrets-store"
              readOnly: true
            {{- end }}
            {{- if .Values.canaryDelivery.deployment.fileConfig }}
            {{- range $key, $val := .Values.fileConfig }}
            - name: beta-file-config
              mountPath: "/mnt/beta-file-config/{{ $key }}"
              subPath: {{ $key }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if .Values.canaryDelivery.deployment.fileConfigExternals.create }}
            {{- range $k, $v := .Values.canaryDelivery.deployment.fileConfigExternals.configMaps }}
            - name: beta-file-config-external-{{ $v.name }}
              mountPath: "/mnt/beta-file-config-external/{{ $v.name }}/{{ $v.key }}"
              subPath: {{ $v.key }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if .Values.canaryDelivery.deployment.fileShare.create }}
            {{- range $k, $v := .Values.canaryDelivery.deployment.fileShare.folders }}
            - name: beta-file-azure-{{ $v.name }}
              csi:
                driver: file.csi.azure.com
                readOnly: {{ $v.readOnly }}
                volumeAttributes:
                  secretName: {{ include "microservice-chart.fullnameCanaryDelivery" $ }}
                  shareName: {{ $v.name }}
                  mountOptions: {{ $v.mountOptions }}
            {{- end }}
            {{- end }}
          {{- end }}
          env:
            # secrets from deployment
            {{- range $name, $value := .Values.envSecret }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "microservice-chart.fullname" $ }}
                  key: {{ $value }}
            {{- end }}
            # secrets from canary
            {{- range $name, $value := .Values.canaryDelivery.deployment.envSecret }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "microservice-chart.fullnameCanaryDelivery" $ }}
                  key: {{ $value }}
            {{- end }}
            # config map values from main deployment
            {{- range $key, $val := .Values.envConfig }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "microservice-chart.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            # config map values from canary
            {{- range $key, $val := .Values.canaryDelivery.deployment.envConfig }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "microservice-chart.fullnameCanaryDelivery" $ }}
                  key: {{ $key }}
            {{- end }}
            #field ref from deployment
            {{- range $key, $val := .Values.envFieldRef }}
            - name: {{ $key }}
              valueFrom:
                fieldRef:
                  fieldPath: {{ $val }}
            {{- end }}
            #field ref from canary
            {{- range $key, $val := .Values.canaryDelivery.deployment.envFieldRef }}
            - name: {{ $key }}
              valueFrom:
                fieldRef:
                  fieldPath: {{ $val }}
            {{- end }}
            #external configmap values
            {{- range $key, $valMap := .Values.envConfigMapExternals }}
            {{- range $internKey, $internVal := $valMap }}
            - name: {{ $internKey }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $key }}
                  key: {{ $internVal }}
            {{- end }}
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if .Values.fileShare.create }}
        {{- range $k, $v := .Values.fileShare.folders }}
        - name: file-azure-{{ $v.name }}
          csi:
            driver: file.csi.azure.com
            readOnly: {{ $v.readOnly }}
            volumeAttributes:
              secretName: {{ include "microservice-chart.fullname" $ }}
              shareName: {{ $v.name }}
              mountOptions: {{ $v.mountOptions }}
        {{- end }}
        {{- end }}
        {{- if .Values.canaryDelivery.deployment.fileShare.create }}
        {{- range $k, $v := .Values.canaryDelivery.deployment.fileShare.folders }}
        - name: beta-file-azure-{{ $v.name }}
          csi:
            driver: file.csi.azure.com
            readOnly: {{ $v.readOnly }}
            volumeAttributes:
              secretName: {{ include "microservice-chart.fullnameCanaryDelivery" $ }}
              shareName: {{ $v.name }}
              mountOptions: {{ $v.mountOptions }}
        {{- end }}
        {{- end }}
        {{- if .Values.canaryDelivery.deployment.envSecret }}
        - name: beta-secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "microservice-chart.fullnameCanaryDelivery" $ }}
        {{- end }}
        {{- if .Values.envSecret }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "microservice-chart.fullname" $ }}
        {{- end }}
        {{- if .Values.fileConfig }}
        - name: file-config
          configMap:
            name: {{ include "microservice-chart.fullname" $ }}
            defaultMode: 420
            items:
          {{- range $key, $val := .Values.fileConfig }}
              - key: {{ $key }}
                path: {{ $key }}
          {{- end }}
        {{- end }}
        {{- if .Values.canaryDelivery.deployment.fileConfig }}
        - name: beta-file-config
          configMap:
            name: {{ include "microservice-chart.fullnameCanaryDelivery" $ }}
            defaultMode: 420
            items:
          {{- range $key, $val := .Values.canaryDelivery.deployment.fileConfig }}
              - key: {{ $key }}
                path: {{ $key }}
          {{- end }}
        {{- end }}
        {{- if .Values.fileConfigExternals.create }}
        {{- range $k, $v := .Values.fileConfigExternals.configMaps }}
        - name: file-config-external-{{ $v.name }}
          configMap:
            name: {{ $v.name }}
            defaultMode: 420
            items:
              - key: {{ $v.key }}
                path: {{ $v.key }}
        {{- end }}
        {{- end }}
        {{- if .Values.canaryDelivery.deployment.fileConfigExternals.create }}
        {{- range $k, $v := .Values.canaryDelivery.deployment.fileConfigExternals.configMaps }}
        - name: beta-file-config-external-{{ $v.name }}
          configMap:
            name: {{ $v.name }}
            defaultMode: 420
            items:
              - key: {{ $v.key }}
                path: {{ $v.key }}
        {{- end }}
        {{- end }}
      restartPolicy: {{ .Values.restartPolicy }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
