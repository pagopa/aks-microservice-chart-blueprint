{{- if .Values.deployment.create -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice-chart.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "microservice-chart.labels" . | nindent 4 }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      {{- include "microservice-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        aadpodidbinding: "{{ .Values.namespace }}-pod-identity"
        {{- include "microservice-chart.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      serviceAccountName: {{ include "microservice-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: app-port-{{ .Values.service.port }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.envSecret }}
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          {{- end }}
          env:
            #secrets
            {{- range $name, $value := .Values.envSecret }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "microservice-chart.fullname" $ }}
                  key: {{ $value }}
            {{- end }}
            #configmap
            {{- range $key, $val := .Values.envConfig }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "microservice-chart.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            #external configmap values
            {{- range $key, $valMap := .Values.envConfigMapExternals }}
            {{- range $internKey, $internVal := $valMap }}
            - name: {{ $internKey }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $key }}
                  key: {{ $internVal }}
            {{- end }}
            {{- end }}
        {{- if .Values.ingress.create }}
        - name: crt-mounter
          securityContext:
            allowPrivilegeEscalation: false
          image: alpine:3.16.1@sha256:9b2a28eb47540823042a2ba401386845089bb7b62a9637d55816132c4c3c36eb
          command: ['tail', '-f', '/dev/null']
          resources:
            limits:
              memory: 16Mi
              cpu: 50m
          volumeMounts:
            - name: secrets-store-inline-crt
              mountPath: "/mnt/secrets-store-crt"
              readOnly: true
        {{- end }}
      volumes:
        {{- if .Values.envSecret }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "microservice-chart.fullname" $ }}
        {{- end }}
        {{- if .Values.ingress.create }}
        ### ingress tls cert
        - name: secrets-store-inline-crt
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.ingress.host | replace "." "-" }}-{{ include "microservice-chart.fullname" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
