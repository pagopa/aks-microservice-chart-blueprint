# -- Namespace in which deploy the microservice
namespace: ""

# -- Helm chart name override
nameOverride: ""

# -- Helm chart fullname override
fullnameOverride: ""

# -- This section allow to configure canary deployment
# @default -- -
canaryDelivery:
  # -- (bool) Beta/Enable Canary/BlueGreen Deployment
  create: false
  # -- This section allow to configure ingress inside canary deployment
  # @default -- -
  ingress:
    # -- (bool) Beta/Enable Ingress for Canary/BlueGreen Deployment
    create: true
    #     # canary:
    #     #   type: bluegreen
    # -- Configure how ingress canary should be
    # @default -- -
    canary:
      # -- The type of canary can be header|bluegreen
      type: header
      # -- the header name used to call the canary deployment
      headerName: canary
      # -- the header values used to call the canary deployment
      headerValue: pagopa
      # -- the weight percent used into canary deployment. Can be used toghether with header
      weightPercent: 10
  fileShare:
    # -- (bool) create the service manifest for Canary/BlueGreen Deployment
    create: false
    # -- (list) Which fileshare use (! this name is used even inside the deployment) for Canary/BlueGreen Deployment
    folders: [ ]
  service:
    # -- (bool) Beta/Enable Service for Canary/BlueGreen Deployment
    create: true
  # -- Beta/Deployment
  # @default -- -
  deployment:
    # -- (bool) Beta/Enable Deployment for Canary/BlueGreen Deployment
    create: true
    image:
      # -- Docker reposity for the container canary
      repository: ghcr.io/pagopa/devops-java-springboot-color
      # -- Container TAG
      tag: 0.7.1
      # -- Pull policy to use
      pullPolicy: Always
    # -- Environment config to use for the canary container
    envConfig: {}
    # -- Environment secrets to use for the canary container
    envSecret: {}
    # -- Environment config from k8s metadata for the canary container
    envFieldRef: {}
    # -- File config pattern to mount for the canary container
    fileConfig: {}
    # -- (bool) Force redeploy canary container
    forceRedeploy: false
  # -- Beta/SecretProviderClass
  # @default -- -
  secretProviderClass:
    # -- (bool) Beta/create or not the secret provider class manifest
    create: true
  serviceMonitor:
    # -- (bool) Create or not the service monitor
    create: false
    endpoints: [ ]

#
# Deployment
#

# -- Configure deployment
# @default -- -
deployment:
  # -- (bool) create the deployment manifest
  create: true
  # -- (int) Number of replicas for this deployment
  replicas: 1
  # -- (bool) Force redeploy container
  forceRedeploy: false


# -- Configure values from config maps external to chart. E.g already present into cluster, see documentation
# @default -- {}
envConfigMapExternals: {}

image:
  # -- Docker reposity for the container
  repository: ""
  # -- Container TAG
  tag: "v0.0.0"
  # -- Pull policy to use
  pullPolicy: Always

# -- Sidecars, each object has exactly the same schema as a Pod, except it does not have an apiVersion or kind
sidecars: []

livenessProbe:
  # -- httpGet will be put as is into deployment yaml
  # @default -- -
  httpGet:
    # -- Live (health) path used by app
    path: /healthz/live
    # -- Live (health) port used by app
    port: 80
  # -- (int) Initial delay before start checking
  initialDelaySeconds: 60
  # -- (int) Numbers of failures before consider the pod fail
  failureThreshold: 6
  # -- (int) Numbers of seconds between one failure and other
  periodSeconds: 10

readinessProbe:
  # -- httpGet will be put as is into deployment yaml
  # @default -- -
  httpGet:
    # -- Ready (health) path used by app
    path: /healthz/ready
    # -- Ready (health) port used by app
    port: 80
  # -- (int) Initial delay before start checking
  initialDelaySeconds: 60
  # -- (int) Numbers of failures before consider the pod fail
  failureThreshold: 6
  # -- (int) Numbers of seconds between one failure and other
  periodSeconds: 10

# -- POD resources section
# @default -- -
resources:
  # -- request is mandatory
  requests:
    memory: "96Mi"
    cpu: "40m"
  # -- limits is mandatory
  limits:
    memory: "128Mi"
    cpu: "150m"

# -- Environment config to use for the canary container
envConfig: {}

# -- Environment secrets to use for the canary container
envSecret: {}

# -- Environment config from k8s metadata
envFieldRef: {}

# -- File config pattern to mount
fileConfig: {}

podAnnotations: {}

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false

# -- K8s node selectors
nodeSelector: {}

# -- Pod taints toleration
tolerations: []

# -- Pod labels affinity
affinity: {}

restartPolicy: "Always"
terminationGracePeriodSeconds: 30
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%

#
# Network
#

# -- Ingress configuration
# @default -- -
ingress:
  # -- (bool) Create or not the ingress manifest
  create: false
  # -- Hostname for the ingress like https://idpay.pagopa.it
  host: ""
  # -- (int) service port to reach
  servicePort: ""
  # -- Path where the application can response like: `/app`
  path: "/"
  pathType: ImplementationSpecific
  # -- (bool) if force ssl redirect is enabled
  forceSslRedirect: true
  # -- the rewrite target for ingress
  rewriteTarget: /$1
  # -- the size allowed by nginx.ingress.kubernetes.io/proxy-body-size for client request body
  proxyBodySize: 1m
  # -- (map) custom annotations for ingress
  annotations: {}

fileShare:
  # -- (bool) create the service manifest
  create: false
  # -- (list) Which fileshare use (! this name is used even inside the deployment)
  folders: []



service:
  # -- (bool) create the service manifest
  create: true
  # -- Which type of service to use
  type: ClusterIP
  # -- (list) Which ports use (! this port is used even inside the deployment)
  ports: []

#
# Autoscaling
#
# -- Autoscaling using KEDA
# @default -- -
autoscaling:
  # -- Enable Autoscaling
  enable: false
  # -- Autoscaling minimum replicas
  minReplica: 1
  # -- Autoscaling maximum replicas
  maxReplica: 1
  # -- Autoscaling event polling intervall
  pollingInterval: 10 # seconds
  # -- Autoscaling cooldown period
  cooldownPeriod: 300 # seconds
  # -- Autoscaling triggers as per [Keda scalers](https://keda.sh/docs/2.6/scalers/)
  triggers: []

#
# Pod identity and KV connection
#

# -- Secrect provider class allow to connect to azure kv
# @default -- -
secretProviderClass:
  # -- (bool) create or not the secret provider class manifest
  create: true

# -- Azure KeyVault connection configuration
# @default -- -
keyvault:
  # -- KV name
  name: ""
  # -- Tenant id (uuid)
  tenantId: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

serviceMonitor:
  # -- (bool) Create or not the service monitor
  create: false
  endpoints: []
