microservice-chart:
  namespace: "testit"

  canaryDelivery:
    create: false
    ingress:
      create: true
      canary:
        type: bluegreen
      # canary:
      #   type: header
      #   headerName: canary
      #   headerValue: pagopa
      #   weightPercent: 10
    service:
      create: true
    deployment:
      create: true
      image:
        repository: ghcr.io/pagopa/devops-java-springboot-color
        tag: 0.8.1
        pullPolicy: Always
      envConfig:
        MY_APP_COLOR: "blue"
        progressive-delivery: "ok"
      envSecret:
        aks-api-url: dvopla-d-itn-dev-aks-apiserver-url

  deployment:
    create: true
    replicas: 1

  envConfig:
    APP: foo
    MY_APP_COLOR: "green"

  envSecret:
    aks-api-url: dvopla-d-itn-dev-aks-apiserver-url

  # fileConfigExternals:
  #   create: false
  #   configMaps:
  #     - name: v2-migration-configmap-games
  #       key: game.properties
  #     - name: v2-migration-configmap-games
  #       key: user-interface.properties
  #     - name: v2-migration-configmap-mongodb
  #       key: keys
  externalConfigMapFiles:
    create: false
    configMaps:
      - name: v2-migration-configmap-games
        key: game.properties
      - name: v2-migration-configmap-games
        key: user-interface.properties
      - name: v2-migration-configmap-mongodb
        key: keys

  # fileConfig:
  #   internal.properties: |
  #     game.types=rock,scissors,paper
  #     player.max=2
  #   internal-user.properties: |
  #     id.types=name,surname,age
  #     secret.types=magic
  configMapFromFile:
    internal.properties: |
      game.types=rock,scissors,paper
      player.max=2
    internal-user.properties: |
      id.types=name,surname,age
      secret.types=magic

  # envConfigMapExternals:
  #   v2-migration-configmap-games:
  #     PLAYER_INITIAL_LIVES_ENV: player-initial-lives
  #     UI_PROPERTIES_FILE_NAME_ENV: ui-properties-file-name
  #   v2-migration-configmap-mongodb:
  #     DATABASE: database
  #     DATABASE_URI: database-uri
  externalConfigMapValues:
    v2-migration-configmap-games:
      PLAYER_INITIAL_LIVES_ENV: player-initial-lives
      UI_PROPERTIES_FILE_NAME_ENV: ui-properties-file-name
    v2-migration-configmap-mongodb:
      DATABASE: database
      DATABASE_URI: database-uri


  image:
    repository: ghcr.io/pagopa/devops-java-springboot-color
    tag: 0.10.0
    pullPolicy: Always

  livenessProbe:
    httpGet:
      path: /status/live
      port: 8080
    initialDelaySeconds: 60
    failureThreshold: 6
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: /status/ready
      port: 8080
    initialDelaySeconds: 60
    failureThreshold: 6
    periodSeconds: 10

  service:
    create: true
    type: ClusterIP
    ports:
      - 8080

  ingress:
    create: true
    host: testit.itn.internal.devopslab.pagopa.it
    path: /testit/v2-migration-java-helm-complete-test(/|$)(.*)
    rewriteTarget: /$2
    servicePort: 8080

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  resources:
    requests:
      memory: "128Mi"
      cpu: "150m"
    limits:
      memory: "128Mi"
      cpu: "150m"

  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 3
    pollingInterval: 30 # seconds
    cooldownPeriod: 300 # seconds
    triggers:
      - type: cpu
        metadata:
          type: Utilization
          value: "60"

  keyvault:
    name: "dvopla-d-itn-testit-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"

  podDisruptionBudget:
    create: true
    minAvailable: 0

  # tmpFolder:
  #   name: log
  #   mountPath: /app/logs
  tmpVolumeMount:
    create: true
    mounts:
      - name: tmp
        mountPath: /tmp
      - name: logs
        mountPath: /app/logs

  # nodeSelector: {}

  # tolerations: []

  # affinity: {}
